`timescale 1ns / 1ps
module Multi_CPU_sim();
    reg clk;
    reg reset;
    reg MIO_ready; // be used: =1
    reg INT; // interrupt
    reg [31:0] Data_in;
    wire [31:0] PC_out; //Test
    wire [31:0] inst_out; //TEST
    wire mem_w; // mem write
    wire [31:0] Addr_out;
    wire [31:0] Data_out;
    wire CPU_MIO;
    wire [4:0] state;

    Multi_CPU UUT(.clk(clk), .reset(reset), .inst_out(inst_out), .INT(INT), .PC_out(PC_out), .mem_w(mem_w), .Addr_out(Addr_out), .Data_in(Data_in), .Data_out(Data_out), .state(state), .CPU_MIO(CPU_MIO), .MIO_ready(MIO_ready));

    initial begin
      reset <= 1;
      clk <= 0;
      MIO_ready <= 1;
      INT <= 0;
      Data_in <= 0;

      #10;

      reset <= 0;

      #10;

      Data_in <= #20 32'h08000008;
        Data_in <= #20 32'h08000008;
        Data_in <= #20 32'h00000020;
        Data_in <= #20 32'h00000020;
        Data_in <= #20 32'h00000020;
        Data_in <= #20 32'h00000020;
        Data_in <= #20 32'h00000020;
        Data_in <= #20 32'h00000020;
        Data_in <= #20 32'h00000020;
        Data_in <= #20 32'h00000827;
        Data_in <= #20 32'h00211820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h0060A027;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00631820;
        Data_in <= #20 32'h00633020;
        Data_in <= #20 32'h00C61820;
        Data_in <= #20 32'h00632020;
        Data_in <= #20 32'h00846820;
        Data_in <= #20 32'h01AD4020;
        Data_in <= #20 32'h0001102A;
        Data_in <= #20 32'h00427020;
        Data_in <= #20 32'h01CE7020;
        Data_in <= #20 32'h00005027;
        Data_in <= #20 32'h014A5020;
        Data_in <= #20 32'hAC660004;
        Data_in <= #20 32'h8C650000;
        Data_in <= #20 32'h00A52820;
        Data_in <= #20 32'h00A52820;
        Data_in <= #20 32'hAC650000;
        Data_in <= #20 32'h01224820;
        Data_in <= #20 32'hAC890000;
        Data_in <= #20 32'h8C0D0214;
        Data_in <= #20 32'h8C650000;
        Data_in <= #20 32'h00A52820;
        Data_in <= #20 32'h00A52820;
        Data_in <= #20 32'hAC650000;
        Data_in <= #20 32'h8C650000;
        Data_in <= #20 32'h00A85824;
        Data_in <= #20 32'h01A26820;
        Data_in <= #20 32'h11A00017;
        Data_in <= #20 32'h8C650000;
        Data_in <= #20 32'h01CE9020;
        Data_in <= #20 32'h0252B020;
        Data_in <= #20 32'h02569020;
        Data_in <= #20 32'h00B25824;
        Data_in <= #20 32'h11600005;
        Data_in <= #20 32'h1172000A;
        Data_in <= #20 32'h01CE9020;
        Data_in <= #20 32'h1172000B;
        Data_in <= #20 32'hAC890000;
        Data_in <= #20 32'h08000036;
        Data_in <= #20 32'h11410001;
        Data_in <= #20 32'h0800004D;
        Data_in <= #20 32'h00005027;
        Data_in <= #20 32'h014A5020;
        Data_in <= #20 32'hAC8A0000;
        Data_in <= #20 32'h08000036;
        Data_in <= #20 32'h8E290260;
        Data_in <= #20 32'hAC890000;
        Data_in <= #20 32'h08000036;
        Data_in <= #20 32'h8E290220;
        Data_in <= #20 32'hAC890000;
        Data_in <= #20 32'h08000036;
        Data_in <= #20 32'h8C0D0214;
        Data_in <= #20 32'h014A5020;
        Data_in <= #20 32'h01425025;
        Data_in <= #20 32'h022E8820;
        Data_in <= #20 32'h02348824;
        Data_in <= #20 32'h01224820;
        Data_in <= #20 32'h11210001;
        Data_in <= #20 32'h0800005F;
        Data_in <= #20 32'h000E4820;
        Data_in <= #20 32'h01224820;
        Data_in <= #20 32'h8C650000;
        Data_in <= #20 32'h00A55820;
        Data_in <= #20 32'h016B5820;
        Data_in <= #20 32'hAC6B0000;
        Data_in <= #20 32'hAC660004;
        Data_in <= #20 32'h0800003E;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'hF0000000;
        Data_in <= #20 32'h000002AB;
        Data_in <= #20 32'h80000000;
        Data_in <= #20 32'h0000003F;
        Data_in <= #20 32'h00000001;
        Data_in <= #20 32'hFFFF0000;
        Data_in <= #20 32'h0000FFFF;
        Data_in <= #20 32'h80000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h11111111;
        Data_in <= #20 32'h22222222;
        Data_in <= #20 32'h33333333;
        Data_in <= #20 32'h44444444;
        Data_in <= #20 32'h55555555;
        Data_in <= #20 32'h66666666;
        Data_in <= #20 32'h77777777;
        Data_in <= #20 32'h88888888;
        Data_in <= #20 32'h99999999;
        Data_in <= #20 32'hAAAAAAAA;
        Data_in <= #20 32'hBBBBBBBB;
        Data_in <= #20 32'hCCCCCCCC;
        Data_in <= #20 32'hDDDDDDDD;
        Data_in <= #20 32'hEEEEEEEE;
        Data_in <= #20 32'hFFFFFFFF;
        Data_in <= #20 32'h557EF7E0;
        Data_in <= #20 32'hD7BDFBD9;
        Data_in <= #20 32'hD7DBFDB9;
        Data_in <= #20 32'hDFCFFCFB;
        Data_in <= #20 32'hDFCFBFFF;
        Data_in <= #20 32'hF7F3DFFF;
        Data_in <= #20 32'hFFFFDF3D;
        Data_in <= #20 32'hFFFF9DB9;
        Data_in <= #20 32'hFFFFBCFB;
        Data_in <= #20 32'hDFCFFCFB;
        Data_in <= #20 32'hDFCFBFFF;
        Data_in <= #20 32'hD7DB9FFF;
        Data_in <= #20 32'hD7DBFDB9;
        Data_in <= #20 32'hD7BDFBD9;
        Data_in <= #20 32'hFFFF07E0;
        Data_in <= #20 32'h007E0FFF;
        Data_in <= #20 32'h03BDF020;
        Data_in <= #20 32'h03DEF820;
        Data_in <= #20 32'h08002300;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
        Data_in <= #20 32'h00000000;
      #10;
    end

    integer i;
    always @*
        for (i=0; i<10; i=i+1) clk <= #20 ~clk;

endmodule
